{"version":3,"sources":["Redux/reducer.js","Redux/store.js","credentials.js","App.js","Redux/actions.js","index.js"],"names":["initialState","value","_isMounted","items","store","createStore","state","action","type","Object","assign","payload","applyMiddleware","thunk","Search","Input","SearchBar","searchQuery","API_KEY","span","offset","placeholder","enterButton","size","onSearch","MovieCard","Title","Year","Poster","imdbID","removeCard","style","margin","className","hoverable","width","alt","src","onClick","App","props","this","gutter","justify","map","index","key","React","Component","connect","dispatch","filter","actions","fetch","then","res","json","result","isLoaded","catch","error","render","document","getElementById"],"mappings":"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","file":"static/js/main.11b8e529.chunk.js","sourcesContent":["const initialState = {\n    value: null,\n    _isMounted: false,\n    items: []\n}\n\nexport default function rootReducer(state = initialState, action){\n\n    if (action.type === \"DELETE_DATA\") {\n        return Object.assign({}, state, action.payload)\n    }\n    else if (action.type === \"GET_DATA\") {\n        //manipulate your state howeever you want\n\n        return Object.assign({}, state, action.payload)\n    }\n\n    else if (action.type === \"ERROR\"){\n        return Object.assign({}, state, action.payload)\n    }\n    return state\n\n    \n}","import rootReducer from './reducer.js';\nimport {createStore, applyMiddleware} from 'redux';\nimport * as thunk from 'redux-thunk'\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk.default)\n)\n\nexport default store","export const API_KEY =  \"d7674cb\";","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {connect} from 'react-redux'\nimport * as actions from './Redux/actions.js';\nimport { API_KEY } from './credentials';\nimport { Input, Row, Col, Card, Button } from 'antd';\nconst { Search } = Input;\n\n\nfunction mapStateToProps(state){\n  return {\n    value: state.value,\n    _isMounted: state._isMounted,\n    items: state.items\n  };\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    removeCard: (items, imdbID) => dispatch(actions.removeCard(items, imdbID)),\n    searchQuery: (value, API_KEY) => dispatch(actions.searchQuery(value, API_KEY))\n  }\n}\n\nconst SearchBar = ({searchQuery, API_KEY}) => {\n  return (\n    <Row>\n      <Col span={15} offset={5}>\n        <Search\n          placeholder=\"Search movie\"\n          enterButton=\"Search\"\n          size=\"large\"\n          onSearch={value => {searchQuery(value, API_KEY)}}\n        />\n      </Col>\n  </Row>\n  )\n}\n\n\nconst MovieCard = ({Title, Year, Poster, imdbID, removeCard, items }) => {\n    return (\n      <Col style={{margin: '30px 0'}} className=\"gutter-row\" span={5}>\n          <Card\n              hoverable\n              style={{width: 250 }}>\n              <div className=\"movie-image\">\n                  <img\n                      alt={Title}\n                      src={Poster === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : Poster}\n                  />\n              </div>\n              <div className=\"movie-card\">\n                <div className=\"title\">{Title} ({Year})</div>\n              </div>\n              <Button onClick={() => {removeCard(items, imdbID)}} type=\"dashed\" >\n                Delete\n              </Button>\n          </Card>\n      </Col>\n\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n          <br></br>\n          <SearchBar searchQuery={this.props.searchQuery} API_KEY = {API_KEY}/>\n          <Row gutter={[16, 16]} justify=\"center\">\n\n            {this.props.items && this.props.items.map((value, index) => (\n              <div key = {index}>\n              <MovieCard \n              Title = {value.Title}\n              Year = {value.Year}\n              Poster = {value.Poster}\n              imdbID = {value.imdbID}\n              removeCard = {this.props.removeCard}\n              items = {this.props.items}\n              />\n\n              </div>\n            ))}\n          </Row>\n\n      </div>\n    );\n  }\n  \n}\n\nexport default connect (\n  mapStateToProps, mapDispatchToProps\n)(App)\n","\n  export function removeCard(items, imdbID) {\n    return {\n        type: \"DELETE_DATA\",\n        payload: {\n            items: items.filter((items) => items.imdbID !== imdbID)\n        }\n    }\n  }\n\n  export function searchQuery(value, API_KEY) {\n\n    return function(dispatch) {\n        return fetch(`https://www.omdbapi.com/?s=${value}&apikey=${API_KEY}`)\n        .then(res => res.json())  \n        .then(\n        (result) => {\n            dispatch({\n                type: \"GET_DATA\",\n                payload: {\n                    isLoaded: true,\n                    items: result.Search\n                }\n            })\n            // console.log(result)\n            // if (this.state._isMounted) {\n            // this.setState({\n            //     isLoaded: true,\n            //     items: result.Search\n            // });\n            // }\n        },\n        \n        ).catch((error) => {\n            dispatch({\n            type: \"ERROR\",\n            payload: {\n                isLoaded: false,\n                error: error\n            }\n        })})\n    }\n  }","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store.js\";\nimport App from \"./App\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}